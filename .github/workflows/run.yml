name: build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7,13,19 * * *"   # gündə 3 dəfə

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests feedparser google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib gspread

      # --- GCP service account açarı (JSON) yazılır
      - name: Write service account key
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > $GITHUB_WORKSPACE/gcp_key.json

      # --- Lazımi secretlər varmı?
      - name: Check required secrets
        run: |
          test -n "${{ secrets.SHEETS_SPREADSHEET_ID }}" || (echo "SHEETS_SPREADSHEET_ID MISSING"; exit 1)
          test -n "${{ secrets.SHEETS_TAB }}"           || (echo "SHEETS_TAB MISSING"; exit 1)
          test -n "${{ secrets.GCP_SA_KEY }}"           || (echo "GCP_SA_KEY MISSING"; exit 1)

      # --- DEBUG: Burada faylları göstəririk
      - name: Show workspace contents
        run: |
          echo "PWD=$(pwd)"
          ls -la
          echo "---- If main.py is not listed above, path is wrong ----"

      # --- Flag-lar (isteğe bağlı)
      - name: Set flags (optional)
        run: |
          echo "DAILY_LIMIT=${{ secrets.DAILY_LIMIT || '250' }}" >> $GITHUB_ENV
          echo "TOP_N_TELEGRAM=${{ secrets.TOP_N_TELEGRAM || '20' }}" >> $GITHUB_ENV

      # --- Script-i işə sal
      - name: Run script
        working-directory: ${{ github.workspace }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp_key.json
          SHEETS_SPREADSHEET_ID: ${{ secrets.SHEETS_SPREADSHEET_ID }}
          SHEETS_TAB: ${{ secrets.SHEETS_TAB }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          DAILY_LIMIT: ${{ env.DAILY_LIMIT }}
          TOP_N_TELEGRAM: ${{ env.TOP_N_TELEGRAM }}
        run: |
          python ./main.py
